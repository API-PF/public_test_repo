name: Main

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'dir1/**'
      - 'dir2/**'

jobs:
  # -------------------------------------------------------------------------
  # コミットメッセージによる処理分岐確認
  # -------------------------------------------------------------------------
  check_commit_msg_dir1:
    # コミットメッセージに"dir1"が含まれる場合True
    if: contains(github.event.head_commit.message, 'dir1')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Echo
        run: echo "Update dir1"

  check_commit_msg_dir2:
    # コミットメッセージに"dir2"が含まれる場合True
    if: contains(github.event.head_commit.message, 'dir2')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Echo
        run: echo "Update dir2"

  # -------------------------------------------------------------------------
  # git diff による処理分岐確認
  # -------------------------------------------------------------------------
  determine-changes:
    runs-on: ubuntu-latest

    outputs:
      dir1_file1_changed: ${{ steps.check_dir1_file1.outputs.changed }}
      dir1_file2_changed: ${{ steps.check_dir1_file2.outputs.changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if dir1_file1.yaml was changed
        id: check_dir1_file1
        run: |
          echo "git diff"
          echo "--------------------------------"
          git diff
          echo "git diff --name-only"
          echo "--------------------------------"
          git diff --name-only
          if git diff --name-only HEAD^ | grep -q 'dir1/dir1_file1.yaml'; then echo "changed=true" >> $GITHUB_ENV; else echo "changed=false" >> $GITHUB_ENV; fi
        shell: bash

      - name: Check if dir1_file2.txt was changed
        id: check_dir1_file2
        run: |
          if git diff --name-only HEAD^ | grep -q 'dir1/dir1_file2.txt'; then echo "changed=true" >> $GITHUB_ENV; else echo "changed=false" >> $GITHUB_ENV; fi
        shell: bash

  deploy-dir1_file1:
    needs: determine-changes
    if: needs.determine-changes.outputs.dir1_file1_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Echo
        run: echo "jobs dir1_file1"

  deploy-dir1_file2:
    needs: determine-changes
    if: needs.determine-changes.outputs.dir1_file2_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Echo
        run: echo "jobs dir1_file2"

